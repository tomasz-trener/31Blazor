@page "/login"
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using Shop.Shared.Auth
@using Shop.Shared.Services.Auth
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<h3>Login</h3>

<EditForm Model="userLoginDto" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value=userLoginDto.Email />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value=userLoginDto.Password />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    <p>@message</p>
</EditForm>

@code{
    private UserLoginDto userLoginDto = new UserLoginDto();
    private string message = string.Empty;

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(userLoginDto);
        if (result.Success)
        { 
            await LocalStorageService.SetItemAsync("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            NavigationManager.NavigateTo("products/productsList");
        }
        else
        {
            message = result.Message;
        }
    }
    
}